2012-02-26 JCB

Extracted from the ALARM project's work on clean kernel 3.1 support for
the ox820 CPU at https://github.com/WarheadsSE/OX820-3.1-Linux

diff -Naur a/drivers/leds/Kconfig b/drivers/leds/Kconfig
--- a/drivers/leds/Kconfig	2012-02-26 00:44:22.000000000 -0800
+++ b/drivers/leds/Kconfig	2012-02-26 00:40:24.000000000 -0800
@@ -229,6 +229,33 @@
 	  This option enables support for BD2802GU RGB LED driver chips
 	  accessed via the I2C bus.
 
+config LEDS_OX820_HMNDCE
+	tristate "LED Support for Home Media Network Drive CE"
+	depends on LEDS_CLASS
+	depends on GPIO_OX820
+	help
+	  This option enables support for LEDs on Home Media Network Drive CE
+
+config LEDS_OX820_POGOPLUG3
+	tristate "LED Support for PogoPlug Series 3"
+	depends on LEDS_CLASS
+	depends on GPIO_OX820
+	help
+	  This option enables support for LEDs on PogoPlug Series 3
+
+config LEDS_OX820_STG212
+	tristate "LED Support for Medion NAS"
+	depends on LEDS_CLASS
+	depends on GPIO_OX820
+	help
+	  This option enables support for LEDs on Medion NAS
+
+config LEDS_OX820_STG212_BUZZER
+	bool "Enable Buzzer support for Medion NAS"
+	depends on LEDS_OX820_STG212
+	help
+	  This option enables support for Buzzer as LED class
+
 comment "LED Triggers"
 
 config LEDS_TRIGGERS
diff -Naur a/drivers/leds/Makefile b/drivers/leds/Makefile
--- a/drivers/leds/Makefile	2012-02-26 00:44:22.000000000 -0800
+++ b/drivers/leds/Makefile	2012-02-26 00:31:57.000000000 -0800
@@ -28,6 +28,9 @@
 obj-$(CONFIG_LEDS_DA903X)		+= leds-da903x.o
 obj-$(CONFIG_LEDS_WM8350)		+= leds-wm8350.o
 obj-$(CONFIG_LEDS_PWM)			+= leds-pwm.o
+obj-$(CONFIG_LEDS_OX820_STG212)		+= leds-gpio-ox820-stg212.o
+obj-$(CONFIG_LEDS_OX820_HMNDCE)		+= leds-gpio-ox820-hmndce.o
+obj-$(CONFIG_LEDS_OX820_POGOPLUG3)	+= leds-gpio-ox820-pogoplug3.o
 
 # LED SPI Drivers
 obj-$(CONFIG_LEDS_DAC124S085)		+= leds-dac124s085.o
diff -Naur a/drivers/leds/leds-gpio-ox820-common.c b/drivers/leds/leds-gpio-ox820-common.c
--- a/drivers/leds/leds-gpio-ox820-common.c	1969-12-31 16:00:00.000000000 -0800
+++ b/drivers/leds/leds-gpio-ox820-common.c	2012-02-26 00:02:10.000000000 -0800
@@ -0,0 +1,193 @@
+/*
+ * OX820 chip GPIO driver
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ */
+
+/* Supports:
+ * OX820
+ */
+
+static void ox820_program_pwm(struct ox820_gpio_led* led_dat, 
+						unsigned brightness)
+{
+	if(led_dat->active_low) {
+		brightness = 255 - brightness;
+		if(led_dat->gpio < SYS_CTRL_NUM_PINS) {
+			writel(brightness, GPIO_A_PWM_VALUE_0 + led_dat->gpio * 8);
+			writel(0, GPIO_A_RR_0 + led_dat->gpio * 8);
+		} else {
+			writel(brightness, GPIO_B_PWM_VALUE_0 + (led_dat->gpio - SYS_CTRL_NUM_PINS) * 8);
+			writel(0, GPIO_B_RR_0 + (led_dat->gpio - SYS_CTRL_NUM_PINS) * 8);
+		}
+	} else {
+		if(led_dat->gpio < SYS_CTRL_NUM_PINS) {
+			writel(brightness, GPIO_A_PWM_VALUE_0 + led_dat->gpio * 8);
+			writel(0, GPIO_A_RR_0 + led_dat->gpio * 8);
+		} else {
+			writel(brightness, GPIO_B_PWM_VALUE_0 + (led_dat->gpio - SYS_CTRL_NUM_PINS) * 8);
+			writel(0, GPIO_B_RR_0 + (led_dat->gpio - SYS_CTRL_NUM_PINS) * 8);
+		}
+	}
+}
+
+static void ox820_gpioleds_set(struct led_classdev* led_cdev,
+						enum led_brightness value)
+{
+	struct ox820_gpio_led* led_dat = 
+		container_of(led_cdev, struct ox820_gpio_led, led);
+	int level;
+	if(value == LED_OFF) {
+		level = 0;
+	} else {
+		level = 1;
+	}
+	if(value > 255) {
+		value = 255;
+	}
+	if(led_dat->active_low) {
+		level = !level;
+	}
+	
+	if(led_dat->delayed_switch_to_output && value != LED_OFF) {
+		gpio_direction_output(led_dat->gpio, led_dat->active_low);
+		led_dat->delayed_switch_to_output = 0;
+	}
+	
+	if(led_dat->no_pwm) {
+		gpio_set_value(led_dat->gpio, level);
+	} else {
+		ox820_program_pwm(led_dat, value);
+	}
+}
+
+static int __devinit ox820_gpioleds_probe(struct platform_device* pdev)
+{
+	int ret = 0;
+	
+	return ret;
+}
+
+static int __devexit ox820_gpioleds_remove(struct platform_device* pdev)
+{
+	int ret = 0;
+	return ret;
+}
+
+static struct platform_driver ox820_gpioleds_driver = {
+	.driver = {
+		.name = DRIVER_NAME,
+	},
+	.probe = ox820_gpioleds_probe,
+	.remove = ox820_gpioleds_remove
+};
+
+static void ox820_gpioleds_release(struct device* dev)
+{
+}
+
+static struct platform_device ox820_gpioleds_dev = 
+{
+	.name = DRIVER_NAME,
+	.id = 0,
+	.num_resources = 0,
+	.resource  = NULL,
+	.dev.coherent_dma_mask = 0,
+	.dev.release = ox820_gpioleds_release
+}; 
+
+static int __init ox820_gpioleds_platform_init(void)
+{
+	int ret, idx;
+
+	ret = platform_driver_register(&ox820_gpioleds_driver);
+	if(0 == ret) {
+		ret = platform_device_register(&ox820_gpioleds_dev);
+		if(0 != ret) {
+			platform_driver_unregister(&ox820_gpioleds_driver);
+		}
+	}
+	
+	if(0 == ret) {
+		ox820_printk(KERN_INFO"ox820_led_gpio: requesting GPIOs\n");
+		for(idx = 0; idx < sizeof(ox820_leds) / sizeof(ox820_leds[0]); ++idx) {
+			ret = gpio_request(ox820_leds[idx].gpio, ox820_leds[idx].led.name);
+			if(0 == ret) {
+				if(!ox820_leds[idx].delayed_switch_to_output) {
+					ret = gpio_direction_output(ox820_leds[idx].gpio, ox820_leds[idx].active_low);
+					if(0 != ret) {
+						gpio_free(ox820_leds[idx].gpio);
+					} else if(!ox820_leds[idx].no_pwm) {
+						ox820_program_pwm(&ox820_leds[idx], 0);
+					}
+				}
+			}
+			if (0 != ret) {
+				break;
+			}
+		}
+		
+		if(0 != ret) {
+			while(idx-- != 0) {
+				gpio_free(ox820_leds[idx].gpio);
+			}
+			platform_device_unregister(&ox820_gpioleds_dev);
+			platform_driver_unregister(&ox820_gpioleds_driver);
+		}
+	}
+	
+	if(0 == ret) {
+		ox820_printk(KERN_INFO"ox820_led_gpio: registering LEDs\n");
+		for(idx = 0; idx < sizeof(ox820_leds) / sizeof(ox820_leds[0]); ++idx) {
+			ret = led_classdev_register(&ox820_gpioleds_dev.dev, &ox820_leds[idx].led);
+			if(0 != ret) {
+				break;
+			}
+		}
+		
+		if(0 != ret) {
+			while(idx-- != 0) {
+				led_classdev_unregister(&ox820_leds[idx].led);
+			}
+			for(idx = 0; idx < sizeof(ox820_leds) / sizeof(ox820_leds[0]); ++idx) {
+				gpio_free(ox820_leds[idx].gpio);
+			}
+			platform_device_unregister(&ox820_gpioleds_dev);
+			platform_driver_unregister(&ox820_gpioleds_driver);
+		}
+	}
+	
+	if(0 != ret) {
+		printk(KERN_ERR"ox820_led_gpio: initialization result %d\n", ret);
+	} else {	
+		printk(KERN_INFO"ox820_led_gpio: initialized\n");
+	}
+	
+	return ret;
+}
+
+static void __exit ox820_gpioleds_platform_exit(void)
+{
+	int idx;
+	for(idx = 0; idx < sizeof(ox820_leds) / sizeof(ox820_leds[0]); ++idx) {
+		gpio_direction_input(ox820_leds[idx].gpio);
+		led_classdev_unregister(&ox820_leds[idx].led);
+		gpio_free(ox820_leds[idx].gpio);
+	}
+	platform_device_unregister(&ox820_gpioleds_dev);
+	platform_driver_unregister(&ox820_gpioleds_driver);
+}
+
+module_init(ox820_gpioleds_platform_init);
+module_exit(ox820_gpioleds_platform_exit);
diff -Naur a/drivers/leds/leds-gpio-ox820-common.h b/drivers/leds/leds-gpio-ox820-common.h
--- a/drivers/leds/leds-gpio-ox820-common.h	1969-12-31 16:00:00.000000000 -0800
+++ b/drivers/leds/leds-gpio-ox820-common.h	2012-02-26 00:02:10.000000000 -0800
@@ -0,0 +1,50 @@
+/*
+ * OX820 chip GPIO driver
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ */
+
+/* Supports:
+ * OX820
+ */
+
+#include <linux/module.h>
+#include <linux/pci.h>
+#include <linux/platform_device.h>
+#include <linux/kernel.h>
+#include <linux/delay.h>
+#include <linux/stddef.h>
+#include <linux/leds.h>
+#include <linux/init.h>
+#include <linux/gpio.h>
+#include <linux/slab.h>
+/* #include <linux/pm_runtime.h> */
+#include <mach/hardware.h>
+
+#if 0
+#define ox820_printk(x...) printk(x)
+#else
+#define ox820_printk(x...) {}
+#endif
+
+struct ox820_gpio_led {
+	struct led_classdev led;
+	unsigned gpio;
+	u8 active_low;
+	u8 delayed_switch_to_output;
+    u8 no_pwm;
+};
+
+static void ox820_gpioleds_set(struct led_classdev* led_cdev,
+						enum led_brightness value);
diff -Naur a/drivers/leds/leds-gpio-ox820-hmndce.c b/drivers/leds/leds-gpio-ox820-hmndce.c
--- a/drivers/leds/leds-gpio-ox820-hmndce.c	1969-12-31 16:00:00.000000000 -0800
+++ b/drivers/leds/leds-gpio-ox820-hmndce.c	2012-02-26 00:02:10.000000000 -0800
@@ -0,0 +1,78 @@
+/*
+ * OX820 chip GPIO driver
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ */
+
+/* Supports:
+ * OX820
+ */
+
+#include "leds-gpio-ox820-common.h"
+
+#define DRIVER_NAME "ox820-led-gpio-stg212"
+
+static struct ox820_gpio_led ox820_leds[] = {
+	{
+		.led = {
+			.name = "power",
+			.brightness_set = ox820_gpioleds_set
+		},
+		.gpio = 7,
+		.active_low = 0,
+		.delayed_switch_to_output = 0
+	},
+	{
+		.led = {
+			.name = "system.ng",
+			.brightness_set = ox820_gpioleds_set
+		},
+		.gpio = 8,
+		.active_low = 0,
+		.delayed_switch_to_output = 0
+	},
+	{
+		.led = {
+			.name = "hdd1",
+			.brightness_set = ox820_gpioleds_set
+		},
+		.gpio = 11,
+		.active_low = 0,
+		.delayed_switch_to_output = 0
+	},
+	{
+		.led = {
+			.name = "system.ok",
+			.brightness_set = ox820_gpioleds_set
+		},
+		.gpio = 25,
+		.active_low = 0,
+		.delayed_switch_to_output = 0
+	},
+	{
+		.led = {
+			.name = "otb",
+			.brightness_set = ox820_gpioleds_set
+		},
+		.gpio = 28,
+		.active_low = 0,
+		.delayed_switch_to_output = 0
+	}
+};
+
+#include "leds-gpio-ox820-common.c"
+
+MODULE_DESCRIPTION("OX820 GPIO-LED HMNDCE driver");
+MODULE_AUTHOR("Sven Bormann");
+MODULE_LICENSE("GPL");
diff -Naur a/drivers/leds/leds-gpio-ox820-pogoplug3.c b/drivers/leds/leds-gpio-ox820-pogoplug3.c
--- a/drivers/leds/leds-gpio-ox820-pogoplug3.c	1969-12-31 16:00:00.000000000 -0800
+++ b/drivers/leds/leds-gpio-ox820-pogoplug3.c	2012-02-26 00:02:10.000000000 -0800
@@ -0,0 +1,60 @@
+/*
+ * OX820 chip GPIO driver
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ */
+
+/* Supports:
+ * OX820 - Pogoplug Series 3
+ */
+
+#include "leds-gpio-ox820-common.h"
+
+#define DRIVER_NAME "ox820-led-gpio-pogoplugpro"
+
+static struct ox820_gpio_led ox820_leds[] = {
+        {
+                .led = {
+                        .name = "status:misc:blue",
+                        .brightness_set = ox820_gpioleds_set
+                },
+                .gpio = 2,
+                .active_low = 0,
+                .delayed_switch_to_output = 0
+        },
+        {
+                .led = {
+                        .name = "status:health:green",
+                        .brightness_set = ox820_gpioleds_set
+                },
+                .gpio = 49,
+                .active_low = 255,
+                .delayed_switch_to_output = 0
+        },
+        {
+                .led = {
+                        .name = "status:fault:orange",
+                        .brightness_set = ox820_gpioleds_set
+                },
+                .gpio = 48,
+                .active_low = 255,
+                .delayed_switch_to_output = 0
+        },
+};
+
+#include "leds-gpio-ox820-common.c"
+
+MODULE_DESCRIPTION("OX820 GPIO-LED PogoPlug Series 3 driver");
+MODULE_AUTHOR("Jason Plum");
+MODULE_LICENSE("GPL");
diff -Naur a/drivers/leds/leds-gpio-ox820-stg212.c b/drivers/leds/leds-gpio-ox820-stg212.c
--- a/drivers/leds/leds-gpio-ox820-stg212.c	1969-12-31 16:00:00.000000000 -0800
+++ b/drivers/leds/leds-gpio-ox820-stg212.c	2012-02-26 00:02:10.000000000 -0800
@@ -0,0 +1,72 @@
+/*
+ * OX820 chip GPIO driver
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ */
+
+/* Supports:
+ * OX820
+ */
+
+#include "leds-gpio-ox820-common.h"
+
+#define DRIVER_NAME "ox820-led-gpio-stg212"
+
+static struct ox820_gpio_led ox820_leds[] = {
+	{
+		.led = {
+			.name = "sysled.blue",
+			.brightness_set = ox820_gpioleds_set
+		},
+		.gpio = 37,
+		.active_low = 0,
+		.delayed_switch_to_output = 1
+	},
+	{
+		.led = {
+			.name = "sysled.red",
+			.brightness_set = ox820_gpioleds_set
+		},
+		.gpio = 38,
+		.active_low = 1,
+		.delayed_switch_to_output = 1
+	},
+	{
+		.led = {
+			.name = "copyled",
+			.brightness_set = ox820_gpioleds_set
+		},
+		.gpio = 40,
+		.active_low = 1,
+		.delayed_switch_to_output = 1
+	},
+#ifdef CONFIG_LEDS_OX820_STG212_BUZZER
+	{
+		.led = {
+			.name = "buzzer",
+			.brightness_set = ox820_gpioleds_set
+		},
+		.gpio = 47,
+		.active_low = 1,
+		.delayed_switch_to_output = 1,
+        .no_pwm = 1
+	}
+#endif
+};
+
+#include "leds-gpio-ox820-common.c"
+
+MODULE_DESCRIPTION("OX820 GPIO-LED STG212 driver");
+MODULE_AUTHOR("Sven Bormann");
+MODULE_LICENSE("GPL");
